{"name": "test_single_modal", "status": "broken", "statusDetails": {"message": "TypeError: not all arguments converted during string formatting", "trace": "self = <Tests.test_modals.Test_Modals object at 0x0000018D8A08ED60>\n\n    @allure.severity(allure.severity_level.BLOCKER)\n    def test_single_modal(self):\n        self.logger.info(\"*************** Test_001_Single_Modal *****************\")\n    \n        self.obj.open(ModalsLocators.ModalUrl)\n        self.logger.info(\"*************** Test Single Modal Strarted *****************\")\n    \n        self.obj.launch_single_modal()\n>       self.logger.info(\"Title of single modal:   \", self.obj.get_single_modal_body())\n\nTests\\test_modals.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nc:\\program files\\python39\\lib\\logging\\__init__.py:1446: in info\n    self._log(INFO, msg, args, **kwargs)\nc:\\program files\\python39\\lib\\logging\\__init__.py:1589: in _log\n    self.handle(record)\nc:\\program files\\python39\\lib\\logging\\__init__.py:1599: in handle\n    self.callHandlers(record)\nc:\\program files\\python39\\lib\\logging\\__init__.py:1661: in callHandlers\n    hdlr.handle(record)\nc:\\program files\\python39\\lib\\logging\\__init__.py:952: in handle\n    self.emit(record)\nc:\\program files\\python39\\lib\\site-packages\\_pytest\\logging.py:331: in emit\n    super().emit(record)\nc:\\program files\\python39\\lib\\logging\\__init__.py:1091: in emit\n    self.handleError(record)\nc:\\program files\\python39\\lib\\logging\\__init__.py:1083: in emit\n    msg = self.format(record)\nc:\\program files\\python39\\lib\\logging\\__init__.py:927: in format\n    return fmt.format(record)\nc:\\program files\\python39\\lib\\site-packages\\_pytest\\logging.py:92: in format\n    return super().format(record)\nc:\\program files\\python39\\lib\\logging\\__init__.py:663: in format\n    record.message = record.getMessage()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <LogRecord: root, 20, C:\\Users\\Microsoft\\PycharmProjects\\SeleniumPOM\\Tests\\test_modals.py, 25, \"Title of single modal:   \">\n\n    def getMessage(self):\n        \"\"\"\n        Return the message for this LogRecord.\n    \n        Return the message for this LogRecord after merging any user-supplied\n        arguments with the message.\n        \"\"\"\n        msg = str(self.msg)\n        if self.args:\n>           msg = msg % self.args\nE           TypeError: not all arguments converted during string formatting\n\nc:\\program files\\python39\\lib\\logging\\__init__.py:367: TypeError"}, "attachments": [{"name": "log", "source": "e19ffdc2-91d1-4a30-b668-0ed2a3431736-attachment.txt", "type": "text/plain"}], "start": 1627427679830, "stop": 1627427686985, "uuid": "6e647d2d-7c4c-4955-b0e5-9cc21ee2452d", "historyId": "e893815e52f35427a22608aa1a5be806", "testCaseId": "96ad42d6fda7d6cda7e90174e98739ef", "fullName": "Tests.test_modals.Test_Modals#test_single_modal", "labels": [{"name": "severity", "value": "blocker"}, {"name": "parentSuite", "value": "Tests"}, {"name": "suite", "value": "test_modals"}, {"name": "subSuite", "value": "Test_Modals"}, {"name": "host", "value": "DESKTOP-K3935TM"}, {"name": "thread", "value": "18544-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_modals"}]}